on: [push]

name: Release

env: 
  RELEASE_BIN: shelly4b_exporter
  RELEASE_DIR: artifacts

jobs:
  build:
    name: Build
    runs-on: ${{matrix.os}}
    strategy:
      max-parallel: 1
      matrix:
        target: [arm-unknown-linux-gnueabihf, armv7-unknown-linux-gnueabihf, x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc]
        include:
          - build: linux
            os: ubuntu-latest
            target: arm-unknown-linux-gnueabihf
          - build: linux
            os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
  
      # matrix:
        # target:
          # - armv7-unknown-linux-gnueabihf
          # - arm-unknown-linux-gnueabihf
          # - x86_64-pc-windows-msvc
          # - x86_64-unknown-linux-gnu
    steps:
      # - name: Install System Dependencies
        # run: |
            # sudo apt-get update && sudo apt-get install -y --no-install-recommends pkg-config libssl-dev \
            # && export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }} --locked --features vendored

      - name: Create artifact directory
        run: |
          mkdir ${{ env.RELEASE_DIR }}
          mkdir dist

      - name: Create tarball (Linux)
        if: matrix.build == 'linux'
        run: |
          mv ./target/${{ matrix.target }}/release/${{ env.RELEASE_BIN }} ./dist/${{ env.RELEASE_BIN }}
          7z a -ttar -so -an ./dist | 7z a -si ./${{ env.RELEASE_DIR }}/${{ env.RELEASE_BIN }}-${{ matrix.target }}.tar.gz

      - name: Create tarball (Windows)
        if: matrix.build == 'windows'
        shell: bash
        run: |
          mv ./target/${{ matrix.target }}/release/${{ env.RELEASE_BIN }}.exe ./dist/${{ env.RELEASE_BIN }}.exe
          7z a -ttar -so -an ./dist | 7z a -si ./${{ env.RELEASE_DIR }}/${{ env.RELEASE_BIN }}-${{ matrix.target }}.tar.gz

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./${{ env.RELEASE_DIR }}/${{ env.RELEASE_BIN }}-${{ matrix.target }}.tar.gz
          asset_name: ${{ env.RELEASE_BIN }}-${{ matrix.target }}.tar.gz
          tag: ${{ github.ref }}
          overwrite: true